{"meta":{"version":1,"warehouse":"2.2.0"},"models":{"Asset":[{"_id":"themes/landscape/source/fancybox/blank.gif","path":"fancybox/blank.gif","modified":0,"renderable":1},{"_id":"themes/landscape/source/css/style.styl","path":"css/style.styl","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/fancybox_overlay.png","path":"fancybox/fancybox_overlay.png","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/fancybox_loading@2x.gif","path":"fancybox/fancybox_loading@2x.gif","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/fancybox_sprite.png","path":"fancybox/fancybox_sprite.png","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/fancybox_loading.gif","path":"fancybox/fancybox_loading.gif","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/jquery.fancybox.css","path":"fancybox/jquery.fancybox.css","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/fancybox_sprite@2x.png","path":"fancybox/fancybox_sprite@2x.png","modified":0,"renderable":1},{"_id":"themes/landscape/source/js/script.js","path":"js/script.js","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/jquery.fancybox.pack.js","path":"fancybox/jquery.fancybox.pack.js","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/jquery.fancybox.js","path":"fancybox/jquery.fancybox.js","modified":0,"renderable":1},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.eot","path":"css/fonts/fontawesome-webfont.eot","modified":0,"renderable":1},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.woff","path":"css/fonts/fontawesome-webfont.woff","modified":0,"renderable":1},{"_id":"themes/landscape/source/css/fonts/FontAwesome.otf","path":"css/fonts/FontAwesome.otf","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/helpers/fancybox_buttons.png","path":"fancybox/helpers/fancybox_buttons.png","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-buttons.js","path":"fancybox/helpers/jquery.fancybox-buttons.js","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-thumbs.css","path":"fancybox/helpers/jquery.fancybox-thumbs.css","modified":0,"renderable":1},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.ttf","path":"css/fonts/fontawesome-webfont.ttf","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-media.js","path":"fancybox/helpers/jquery.fancybox-media.js","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-thumbs.js","path":"fancybox/helpers/jquery.fancybox-thumbs.js","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-buttons.css","path":"fancybox/helpers/jquery.fancybox-buttons.css","modified":0,"renderable":1},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.svg","path":"css/fonts/fontawesome-webfont.svg","modified":0,"renderable":1},{"_id":"themes/landscape/source/css/images/banner.jpg","path":"css/images/banner.jpg","modified":0,"renderable":1}],"Cache":[{"_id":"themes/landscape/.npmignore","hash":"ea2b285a29690f1eabbad0f3a158e34e9ccd1d86","modified":1459174039158},{"_id":"themes/landscape/_config.yml","hash":"218c5fb76666696c42dc86e2de4711e6b80befbf","modified":1459174039161},{"_id":"themes/landscape/package.json","hash":"d07f326588fef82f1d23ae3101c9ddfff34c132f","modified":1459174039178},{"_id":"source/_drafts/hexo-and-github.md","hash":"edb8074cb321eee3bff3cb34c5bbe0780e2290c1","modified":1459174039155},{"_id":"themes/landscape/Gruntfile.js","hash":"412e30530784993c8997aa8b1319c669b83b91c2","modified":1459174039159},{"_id":"themes/landscape/LICENSE","hash":"82ce1e15ddeabeaaca60e2186b5a3ce42b1a9c49","modified":1459174039159},{"_id":"source/_posts/api-design.md","hash":"90cd00a5e47026d924cfca8926f2e6ded3e8598f","modified":1459174039157},{"_id":"themes/landscape/layout/archive.ejs","hash":"2703b07cc8ac64ae46d1d263f4653013c7e1666b","modified":1459174039176},{"_id":"themes/landscape/layout/category.ejs","hash":"765426a9c8236828dc34759e604cc2c52292835a","modified":1459174039176},{"_id":"themes/landscape/layout/index.ejs","hash":"aa1b4456907bdb43e629be3931547e2d29ac58c8","modified":1459174039177},{"_id":"themes/landscape/layout/layout.ejs","hash":"5d86bc48b0f1bdce9a2bb548c2f8e7a4f50d499a","modified":1459174039177},{"_id":"themes/landscape/layout/page.ejs","hash":"7d80e4e36b14d30a7cd2ac1f61376d9ebf264e8b","modified":1459174039178},{"_id":"themes/landscape/layout/post.ejs","hash":"7d80e4e36b14d30a7cd2ac1f61376d9ebf264e8b","modified":1459174039178},{"_id":"themes/landscape/layout/tag.ejs","hash":"eaa7b4ccb2ca7befb90142e4e68995fb1ea68b2e","modified":1459174039178},{"_id":"themes/landscape/languages/default.yml","hash":"f26a34a7983d4bc17c65c7f0f14da598e62ce66d","modified":1459174039162},{"_id":"themes/landscape/languages/nl.yml","hash":"3d82ec703d0b3287739d7cb4750a715ae83bfcb3","modified":1459174039162},{"_id":"themes/landscape/languages/no.yml","hash":"ddf2035e920a5ecb9076138c184257d9f51896a7","modified":1459174039163},{"_id":"themes/landscape/languages/ru.yml","hash":"2a476b4c6e04900914c81378941640ac5d58a1f0","modified":1459174039163},{"_id":"themes/landscape/languages/zh-CN.yml","hash":"b057f389c6713010f97d461e48ec959b0b6f3b44","modified":1459174039164},{"_id":"themes/landscape/languages/zh-TW.yml","hash":"f5f0ca88185da7a8457760d84bf221781473bd7c","modified":1459174039164},{"_id":"themes/landscape/scripts/fancybox.js","hash":"4c130fc242cf9b59b5df6ca5eae3b14302311e8c","modified":1459174039179},{"_id":"themes/landscape/README.md","hash":"e7cc82dc79596f36ba05a8139e7d6b2dfc4ae5f9","modified":1459174039160},{"_id":"themes/landscape/layout/_partial/after-footer.ejs","hash":"a7faab4f3601b28107af5b1095b3966c2f88fec8","modified":1459174039166},{"_id":"themes/landscape/layout/_partial/archive-post.ejs","hash":"5062c723721d8497eebad372f57092ade45041f4","modified":1459174039167},{"_id":"themes/landscape/layout/_partial/google-analytics.ejs","hash":"1ccc627d7697e68fddc367c73ac09920457e5b35","modified":1459174039170},{"_id":"themes/landscape/layout/_partial/footer.ejs","hash":"6faefe07f3d64e21c7743276e0f55ee1544f9d86","modified":1459174039169},{"_id":"themes/landscape/layout/_partial/header.ejs","hash":"148bdf714dd1a7bf55e571f13808ceae079200cc","modified":1459174039171},{"_id":"themes/landscape/layout/_partial/head.ejs","hash":"89998e6b2929c4ff5093bbf6b86d611d7420be52","modified":1459174039170},{"_id":"themes/landscape/layout/_partial/mobile-nav.ejs","hash":"347cf1befd2ea637c24bd5901929d8e36e359e75","modified":1459174039172},{"_id":"themes/landscape/layout/_partial/sidebar.ejs","hash":"c70869569749a8f48cce202fa57926c06b55fdab","modified":1459174039174},{"_id":"themes/landscape/layout/_widget/category.ejs","hash":"866790acc13fed44b7ef74c3e19c300a3d6180d8","modified":1459174039175},{"_id":"themes/landscape/layout/_widget/archive.ejs","hash":"0fe1e52c291c9499bd05b966e0b9aac5be351c58","modified":1459174039175},{"_id":"themes/landscape/layout/_widget/recent_posts.ejs","hash":"16800f85ffb036d2644a26e02facd61acb3706e9","modified":1459174039175},{"_id":"themes/landscape/layout/_widget/tagcloud.ejs","hash":"7259c179aa0c41c02e467ad892292e90430aaabc","modified":1459174039176},{"_id":"themes/landscape/layout/_widget/tag.ejs","hash":"6017c54a8c3c8ff8db491cfbea3100c139da75d6","modified":1459174039176},{"_id":"themes/landscape/source/css/_extend.styl","hash":"8ab1ad313bd6707d248c5ca1ee9a5eab8d815e42","modified":1459174039180},{"_id":"source/_posts/nsq-start.md","hash":"c1b54d6003d5816eab2a12bb2d07a7941891e90b","modified":1459177107125},{"_id":"themes/landscape/layout/_partial/archive.ejs","hash":"3beb0d164acacb6f21e1ca2038158a74ab4a73e4","modified":1459174039168},{"_id":"themes/landscape/layout/_partial/article.ejs","hash":"5cf2b8a1148e6f8c4bd9ca9e3b84c7e5a59d56bc","modified":1459174039168},{"_id":"themes/landscape/source/fancybox/blank.gif","hash":"2daeaa8b5f19f0bc209d976c02bd6acb51b00b0a","modified":1459174039194},{"_id":"themes/landscape/source/css/_variables.styl","hash":"255abeabe7f908a625da0193067cd2b4b16648e9","modified":1459174039184},{"_id":"themes/landscape/source/css/style.styl","hash":"4a3e64ee8dad5834860c30b4176882eff628ca6b","modified":1459174039194},{"_id":"themes/landscape/source/fancybox/fancybox_overlay.png","hash":"b3a4ee645ba494f52840ef8412015ba0f465dbe0","modified":1459174039195},{"_id":"themes/landscape/source/fancybox/fancybox_loading@2x.gif","hash":"273b123496a42ba45c3416adb027cd99745058b0","modified":1459174039195},{"_id":"themes/landscape/source/fancybox/fancybox_sprite.png","hash":"17df19f97628e77be09c352bf27425faea248251","modified":1459174039196},{"_id":"themes/landscape/source/fancybox/fancybox_loading.gif","hash":"1a755fb2599f3a313cc6cfdb14df043f8c14a99c","modified":1459174039194},{"_id":"themes/landscape/source/fancybox/jquery.fancybox.css","hash":"2e54d51d21e68ebc4bb870f6e57d3bfb660d4f9c","modified":1459174039199},{"_id":"themes/landscape/source/fancybox/fancybox_sprite@2x.png","hash":"30c58913f327e28f466a00f4c1ac8001b560aed8","modified":1459174039196},{"_id":"themes/landscape/source/js/script.js","hash":"c0d368681c687258b628bacc84cc30d353de6d47","modified":1459174039201},{"_id":"themes/landscape/layout/_partial/post/category.ejs","hash":"16128d2422645e18d1b6882d4c4df17d895bd76e","modified":1459174039172},{"_id":"themes/landscape/layout/_partial/post/date.ejs","hash":"947f513f7a85fbcf085624e46dc2ae6de8185eec","modified":1459174039173},{"_id":"themes/landscape/layout/_partial/post/gallery.ejs","hash":"b0bf3f5d923c261ca2b5fabab513f1ec2708c8ca","modified":1459174039173},{"_id":"themes/landscape/layout/_partial/post/tag.ejs","hash":"694b5101bcc44c9f9c1cc62e5ad2fdfb4b7c7a07","modified":1459174039174},{"_id":"themes/landscape/layout/_partial/post/title.ejs","hash":"d4a460a35e2112d0c7414fd5e19b3a16093f1caf","modified":1459174039174},{"_id":"themes/landscape/source/fancybox/jquery.fancybox.pack.js","hash":"2da892a02778236b64076e5e8802ef0566e1d9e8","modified":1459174039200},{"_id":"themes/landscape/layout/_partial/post/nav.ejs","hash":"cbb3819ce512bd24db8bad41b8617d46eba82fdc","modified":1459174039173},{"_id":"themes/landscape/source/css/_partial/article.styl","hash":"e291bc8c5f0c21080baa549d5d9ef2f39a871ea7","modified":1459174039181},{"_id":"themes/landscape/source/css/_partial/archive.styl","hash":"9e574d8eb1a5285ec3b4346607414770d2f7e0ff","modified":1459174039180},{"_id":"themes/landscape/source/css/_partial/footer.styl","hash":"6f7aa810f296d6a1a4486637b5a853d35a198938","modified":1459174039181},{"_id":"themes/landscape/source/css/_partial/comment.styl","hash":"2834870661e490775f9154d71638bfdc72e640a6","modified":1459174039181},{"_id":"themes/landscape/source/css/_partial/mobile.styl","hash":"680c7b809b62cd3ad294e822793fbd0b1a32cc33","modified":1459174039182},{"_id":"themes/landscape/source/css/_partial/sidebar-aside.styl","hash":"1fb15f13ba70d5b954f62920c6b63d26e2fb2985","modified":1459174039182},{"_id":"themes/landscape/source/css/_partial/sidebar-bottom.styl","hash":"4132e25ba9680c4b911a01abc75f501cda3fa4f1","modified":1459174039183},{"_id":"themes/landscape/source/css/_partial/sidebar.styl","hash":"8d971a00e644a600179b04815688d188f094012e","modified":1459174039183},{"_id":"themes/landscape/source/fancybox/jquery.fancybox.js","hash":"58193c802f307ec9bc9e586c0e8a13ebef45d2f8","modified":1459174039200},{"_id":"themes/landscape/source/css/_partial/header.styl","hash":"67e59feb18eee6026717cb440d86ab9551782628","modified":1459174039181},{"_id":"themes/landscape/source/css/_partial/highlight.styl","hash":"05da1b8f4859761dc60bca40b8682f167e350742","modified":1459174039182},{"_id":"themes/landscape/source/css/_util/grid.styl","hash":"1aa883ab432d9e4139c89dcbd40ae2bd1528d029","modified":1459174039184},{"_id":"themes/landscape/source/css/_util/mixin.styl","hash":"429bad87fc156eacf226c5e35b0eafc277f2504b","modified":1459174039184},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.eot","hash":"7619748fe34c64fb157a57f6d4ef3678f63a8f5e","modified":1459174039186},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.woff","hash":"04c3bf56d87a0828935bd6b4aee859995f321693","modified":1459174039190},{"_id":"themes/landscape/source/css/fonts/FontAwesome.otf","hash":"b5b4f9be85f91f10799e87a083da1d050f842734","modified":1459174039185},{"_id":"themes/landscape/source/fancybox/helpers/fancybox_buttons.png","hash":"e385b139516c6813dcd64b8fc431c364ceafe5f3","modified":1459174039197},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-buttons.js","hash":"4c9c395d705d22af7da06870d18f434e2a2eeaf9","modified":1459174039197},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-thumbs.css","hash":"b88b589f5f1aa1b3d87cc7eef34c281ff749b1ae","modified":1459174039198},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.ttf","hash":"7f09c97f333917034ad08fa7295e916c9f72fd3f","modified":1459174039189},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-media.js","hash":"e14c32cc6823b81b2f758512f13ed8eb9ef2b454","modified":1459174039198},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-thumbs.js","hash":"83cdfea43632b613771691a11f56f99d85fb6dbd","modified":1459174039198},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-buttons.css","hash":"6394c48092085788a8c0ef72670b0652006231a1","modified":1459174039197},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.svg","hash":"a275426daefd3716c53561fad121d258a7f05b47","modified":1459174039188},{"_id":"themes/landscape/source/css/images/banner.jpg","hash":"f44aa591089fcb3ec79770a1e102fd3289a7c6a6","modified":1459174039193},{"_id":"public/2016/03/28/api-design/index.html","hash":"ef8198976674f7c025b076ce401dfeb0653d664b","modified":1459346765097},{"_id":"public/archives/index.html","hash":"a1602be6c9bae060d5a5f501e67ee2cb3ea31c4a","modified":1459346765098},{"_id":"public/archives/2016/index.html","hash":"08e391907edbc26c920dfabe99a52c3dfcaf7558","modified":1459346765098},{"_id":"public/archives/2016/03/index.html","hash":"d13e9bc3a3c97466c9768c7b100765f1fcaa3de7","modified":1459346765099},{"_id":"public/2016/03/28/nsq-start/index.html","hash":"0e2cdeb42af91cfc11e2add4c9a879942e98772f","modified":1459346765099},{"_id":"public/index.html","hash":"9f9d2c28422b4bec26c1b502069c26ae8e70c7b2","modified":1459346765099},{"_id":"public/fancybox/blank.gif","hash":"2daeaa8b5f19f0bc209d976c02bd6acb51b00b0a","modified":1459346765119},{"_id":"public/fancybox/fancybox_overlay.png","hash":"b3a4ee645ba494f52840ef8412015ba0f465dbe0","modified":1459346765119},{"_id":"public/fancybox/fancybox_loading@2x.gif","hash":"273b123496a42ba45c3416adb027cd99745058b0","modified":1459346765119},{"_id":"public/fancybox/fancybox_sprite.png","hash":"17df19f97628e77be09c352bf27425faea248251","modified":1459346765119},{"_id":"public/fancybox/fancybox_loading.gif","hash":"1a755fb2599f3a313cc6cfdb14df043f8c14a99c","modified":1459346765120},{"_id":"public/fancybox/fancybox_sprite@2x.png","hash":"30c58913f327e28f466a00f4c1ac8001b560aed8","modified":1459346765120},{"_id":"public/css/fonts/fontawesome-webfont.eot","hash":"7619748fe34c64fb157a57f6d4ef3678f63a8f5e","modified":1459346765120},{"_id":"public/css/fonts/fontawesome-webfont.woff","hash":"04c3bf56d87a0828935bd6b4aee859995f321693","modified":1459346765120},{"_id":"public/fancybox/helpers/fancybox_buttons.png","hash":"e385b139516c6813dcd64b8fc431c364ceafe5f3","modified":1459346765120},{"_id":"public/css/fonts/FontAwesome.otf","hash":"b5b4f9be85f91f10799e87a083da1d050f842734","modified":1459346765120},{"_id":"public/css/fonts/fontawesome-webfont.ttf","hash":"7f09c97f333917034ad08fa7295e916c9f72fd3f","modified":1459346770424},{"_id":"public/fancybox/jquery.fancybox.css","hash":"aaa582fb9eb4b7092dc69fcb2d5b1c20cca58ab6","modified":1459346770431},{"_id":"public/js/script.js","hash":"2876e0b19ce557fca38d7c6f49ca55922ab666a1","modified":1459346770431},{"_id":"public/fancybox/helpers/jquery.fancybox-buttons.js","hash":"dc3645529a4bf72983a39fa34c1eb9146e082019","modified":1459346770431},{"_id":"public/fancybox/helpers/jquery.fancybox-thumbs.css","hash":"4ac329c16a5277592fc12a37cca3d72ca4ec292f","modified":1459346770431},{"_id":"public/fancybox/helpers/jquery.fancybox-media.js","hash":"294420f9ff20f4e3584d212b0c262a00a96ecdb3","modified":1459346770432},{"_id":"public/fancybox/helpers/jquery.fancybox-thumbs.js","hash":"47da1ae5401c24b5c17cc18e2730780f5c1a7a0c","modified":1459346770434},{"_id":"public/fancybox/helpers/jquery.fancybox-buttons.css","hash":"1a9d8e5c22b371fcc69d4dbbb823d9c39f04c0c8","modified":1459346770434},{"_id":"public/css/style.css","hash":"5c03b9eee7e544ec70b0049c2d56d0368b58bfde","modified":1459346770434},{"_id":"public/fancybox/jquery.fancybox.pack.js","hash":"9e0d51ca1dbe66f6c0c7aefd552dc8122e694a6e","modified":1459346770434},{"_id":"public/fancybox/jquery.fancybox.js","hash":"d08b03a42d5c4ba456ef8ba33116fdbb7a9cabed","modified":1459346770434},{"_id":"public/css/fonts/fontawesome-webfont.svg","hash":"a275426daefd3716c53561fad121d258a7f05b47","modified":1459346770438},{"_id":"public/css/images/banner.jpg","hash":"f44aa591089fcb3ec79770a1e102fd3289a7c6a6","modified":1459346770438}],"Category":[],"Data":[],"Page":[],"Post":[{"title":"hexo+github 搭建个人静态博客","date":"2016-03-27T13:53:59.000Z","_content":"## 环境准备\n\n### Node安装\n\n首先我们去[官网](https://nodejs.org)\nnode.js npm hexo git \n\n## github账号\n\n## ","source":"_drafts/hexo-and-github.md","raw":"---\ntitle: hexo+github 搭建个人静态博客\ndate: 2016-03-27 21:53:59\ntags:\n---\n## 环境准备\n\n### Node安装\n\n首先我们去[官网](https://nodejs.org)\nnode.js npm hexo git \n\n## github账号\n\n## ","slug":"hexo-and-github","published":0,"updated":"2016-03-28T14:07:19.155Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cimexdt500000ogmwjrhfmo70","content":"<h2 id=\"环境准备\"><a href=\"#环境准备\" class=\"headerlink\" title=\"环境准备\"></a>环境准备</h2><h3 id=\"Node安装\"><a href=\"#Node安装\" class=\"headerlink\" title=\"Node安装\"></a>Node安装</h3><p>首先我们去<a href=\"https://nodejs.org\" target=\"_blank\" rel=\"external\">官网</a><br>node.js npm hexo git </p>\n<h2 id=\"github账号\"><a href=\"#github账号\" class=\"headerlink\" title=\"github账号\"></a>github账号</h2><p>## </p>\n","excerpt":"","more":"<h2 id=\"环境准备\"><a href=\"#环境准备\" class=\"headerlink\" title=\"环境准备\"></a>环境准备</h2><h3 id=\"Node安装\"><a href=\"#Node安装\" class=\"headerlink\" title=\"Node安装\"></a>Node安装</h3><p>首先我们去<a href=\"https://nodejs.org\">官网</a><br>node.js npm hexo git </p>\n<h2 id=\"github账号\"><a href=\"#github账号\" class=\"headerlink\" title=\"github账号\"></a>github账号</h2><p>## </p>\n"},{"title":"API接口文档设计","_content":"\n### 功能说明\n\n简单说明接口实现的相关功能，使用场景等等。\n\n### 调用说明\n\n#### 请求地址\n\n```\nhttp://www.xxx.com/api/demo\n```\n\n#### 请求方式\n\n```\nGET/POST\n```\n\n#### 请求头信息\n\n一些需要设置请求头的需要加上特殊说明。\n例如:\n```\nContent-Type：application/json\n```\n\n#### 请求参数\n\nGET请求方式的列表方式列出请求所需参数，包含说明是否为必传字段。\n\n|参数|类型|说明|必传|\n|---|---|---|---|\n|userId|int|用户ID|Y|\n|timestamp|long|时间戳(毫秒值)|N|\n\nPOST方式需要传json参数的列出json样例格式\n\n```js\n{\n\t\"userId\":123,\t//用户ID，必传\n\t\"timestamp\":3887717000\t//时间戳(毫秒值)，非必传\n}\n```\n\n### 返回\n\n一般接口返回JSON或XML格式的数据，需列出相关返回格式样例数据。\n\n```js\n{\n\t\"status\": 0,\n\t\"data\":{\n\t\t\"userId\":123,\t//用户ID\n\t\t\"userName\":\"张三\"\t//用户名\n\t},\n\t\"msg\": \"success\"\n}\n```\n\n```xml\n<Result>\n\t<status>0</status>\n\t<msg>success</msg>\n\t<data>\n\t\t<userId value=\"123\"/>\n\t\t<userName value=\"张三\"/>\n\t</data>\n</Result>\n```\n#### 返回状态\n\n必要时需要列出所有返回状态对应的数据格式。\n\n|状态值|状态说明|\n|---|---|\n|0|成功|\n|500|系统异常|\n|404|请求不存在|","source":"_posts/api-design.md","raw":"---\ntitle: API接口文档设计\n---\n\n### 功能说明\n\n简单说明接口实现的相关功能，使用场景等等。\n\n### 调用说明\n\n#### 请求地址\n\n```\nhttp://www.xxx.com/api/demo\n```\n\n#### 请求方式\n\n```\nGET/POST\n```\n\n#### 请求头信息\n\n一些需要设置请求头的需要加上特殊说明。\n例如:\n```\nContent-Type：application/json\n```\n\n#### 请求参数\n\nGET请求方式的列表方式列出请求所需参数，包含说明是否为必传字段。\n\n|参数|类型|说明|必传|\n|---|---|---|---|\n|userId|int|用户ID|Y|\n|timestamp|long|时间戳(毫秒值)|N|\n\nPOST方式需要传json参数的列出json样例格式\n\n```js\n{\n\t\"userId\":123,\t//用户ID，必传\n\t\"timestamp\":3887717000\t//时间戳(毫秒值)，非必传\n}\n```\n\n### 返回\n\n一般接口返回JSON或XML格式的数据，需列出相关返回格式样例数据。\n\n```js\n{\n\t\"status\": 0,\n\t\"data\":{\n\t\t\"userId\":123,\t//用户ID\n\t\t\"userName\":\"张三\"\t//用户名\n\t},\n\t\"msg\": \"success\"\n}\n```\n\n```xml\n<Result>\n\t<status>0</status>\n\t<msg>success</msg>\n\t<data>\n\t\t<userId value=\"123\"/>\n\t\t<userName value=\"张三\"/>\n\t</data>\n</Result>\n```\n#### 返回状态\n\n必要时需要列出所有返回状态对应的数据格式。\n\n|状态值|状态说明|\n|---|---|\n|0|成功|\n|500|系统异常|\n|404|请求不存在|","slug":"api-design","published":1,"date":"2016-03-28T14:07:19.156Z","updated":"2016-03-28T14:07:19.157Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cimexdt5j0001ogmw1spehjhc","content":"<h3 id=\"功能说明\"><a href=\"#功能说明\" class=\"headerlink\" title=\"功能说明\"></a>功能说明</h3><p>简单说明接口实现的相关功能，使用场景等等。</p>\n<h3 id=\"调用说明\"><a href=\"#调用说明\" class=\"headerlink\" title=\"调用说明\"></a>调用说明</h3><h4 id=\"请求地址\"><a href=\"#请求地址\" class=\"headerlink\" title=\"请求地址\"></a>请求地址</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">http://www.xxx.com/api/demo</span><br></pre></td></tr></table></figure>\n<h4 id=\"请求方式\"><a href=\"#请求方式\" class=\"headerlink\" title=\"请求方式\"></a>请求方式</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">GET/POST</span><br></pre></td></tr></table></figure>\n<h4 id=\"请求头信息\"><a href=\"#请求头信息\" class=\"headerlink\" title=\"请求头信息\"></a>请求头信息</h4><p>一些需要设置请求头的需要加上特殊说明。<br>例如:<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Content-Type：application/json</span><br></pre></td></tr></table></figure></p>\n<h4 id=\"请求参数\"><a href=\"#请求参数\" class=\"headerlink\" title=\"请求参数\"></a>请求参数</h4><p>GET请求方式的列表方式列出请求所需参数，包含说明是否为必传字段。</p>\n<table>\n<thead>\n<tr>\n<th>参数</th>\n<th>类型</th>\n<th>说明</th>\n<th>必传</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>userId</td>\n<td>int</td>\n<td>用户ID</td>\n<td>Y</td>\n</tr>\n<tr>\n<td>timestamp</td>\n<td>long</td>\n<td>时间戳(毫秒值)</td>\n<td>N</td>\n</tr>\n</tbody>\n</table>\n<p>POST方式需要传json参数的列出json样例格式</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">\t<span class=\"string\">\"userId\"</span>:<span class=\"number\">123</span>,\t<span class=\"comment\">//用户ID，必传</span></span><br><span class=\"line\">\t<span class=\"string\">\"timestamp\"</span>:<span class=\"number\">3887717000</span>\t<span class=\"comment\">//时间戳(毫秒值)，非必传</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"返回\"><a href=\"#返回\" class=\"headerlink\" title=\"返回\"></a>返回</h3><p>一般接口返回JSON或XML格式的数据，需列出相关返回格式样例数据。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">\t<span class=\"string\">\"status\"</span>: <span class=\"number\">0</span>,</span><br><span class=\"line\">\t<span class=\"string\">\"data\"</span>:&#123;</span><br><span class=\"line\">\t\t<span class=\"string\">\"userId\"</span>:<span class=\"number\">123</span>,\t<span class=\"comment\">//用户ID</span></span><br><span class=\"line\">\t\t<span class=\"string\">\"userName\"</span>:<span class=\"string\">\"张三\"</span>\t<span class=\"comment\">//用户名</span></span><br><span class=\"line\">\t&#125;,</span><br><span class=\"line\">\t<span class=\"string\">\"msg\"</span>: <span class=\"string\">\"success\"</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">Result</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">status</span>&gt;</span>0<span class=\"tag\">&lt;/<span class=\"name\">status</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">msg</span>&gt;</span>success<span class=\"tag\">&lt;/<span class=\"name\">msg</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">data</span>&gt;</span></span><br><span class=\"line\">\t\t<span class=\"tag\">&lt;<span class=\"name\">userId</span> <span class=\"attr\">value</span>=<span class=\"string\">\"123\"</span>/&gt;</span></span><br><span class=\"line\">\t\t<span class=\"tag\">&lt;<span class=\"name\">userName</span> <span class=\"attr\">value</span>=<span class=\"string\">\"张三\"</span>/&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;/<span class=\"name\">data</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">Result</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<h4 id=\"返回状态\"><a href=\"#返回状态\" class=\"headerlink\" title=\"返回状态\"></a>返回状态</h4><p>必要时需要列出所有返回状态对应的数据格式。</p>\n<table>\n<thead>\n<tr>\n<th>状态值</th>\n<th>状态说明</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>0</td>\n<td>成功</td>\n</tr>\n<tr>\n<td>500</td>\n<td>系统异常</td>\n</tr>\n<tr>\n<td>404</td>\n<td>请求不存在</td>\n</tr>\n</tbody>\n</table>\n","excerpt":"","more":"<h3 id=\"功能说明\"><a href=\"#功能说明\" class=\"headerlink\" title=\"功能说明\"></a>功能说明</h3><p>简单说明接口实现的相关功能，使用场景等等。</p>\n<h3 id=\"调用说明\"><a href=\"#调用说明\" class=\"headerlink\" title=\"调用说明\"></a>调用说明</h3><h4 id=\"请求地址\"><a href=\"#请求地址\" class=\"headerlink\" title=\"请求地址\"></a>请求地址</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">http://www.xxx.com/api/demo</span><br></pre></td></tr></table></figure>\n<h4 id=\"请求方式\"><a href=\"#请求方式\" class=\"headerlink\" title=\"请求方式\"></a>请求方式</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">GET/POST</span><br></pre></td></tr></table></figure>\n<h4 id=\"请求头信息\"><a href=\"#请求头信息\" class=\"headerlink\" title=\"请求头信息\"></a>请求头信息</h4><p>一些需要设置请求头的需要加上特殊说明。<br>例如:<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Content-Type：application/json</span><br></pre></td></tr></table></figure></p>\n<h4 id=\"请求参数\"><a href=\"#请求参数\" class=\"headerlink\" title=\"请求参数\"></a>请求参数</h4><p>GET请求方式的列表方式列出请求所需参数，包含说明是否为必传字段。</p>\n<table>\n<thead>\n<tr>\n<th>参数</th>\n<th>类型</th>\n<th>说明</th>\n<th>必传</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>userId</td>\n<td>int</td>\n<td>用户ID</td>\n<td>Y</td>\n</tr>\n<tr>\n<td>timestamp</td>\n<td>long</td>\n<td>时间戳(毫秒值)</td>\n<td>N</td>\n</tr>\n</tbody>\n</table>\n<p>POST方式需要传json参数的列出json样例格式</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">\t<span class=\"string\">\"userId\"</span>:<span class=\"number\">123</span>,\t<span class=\"comment\">//用户ID，必传</span></span><br><span class=\"line\">\t<span class=\"string\">\"timestamp\"</span>:<span class=\"number\">3887717000</span>\t<span class=\"comment\">//时间戳(毫秒值)，非必传</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"返回\"><a href=\"#返回\" class=\"headerlink\" title=\"返回\"></a>返回</h3><p>一般接口返回JSON或XML格式的数据，需列出相关返回格式样例数据。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">\t<span class=\"string\">\"status\"</span>: <span class=\"number\">0</span>,</span><br><span class=\"line\">\t<span class=\"string\">\"data\"</span>:&#123;</span><br><span class=\"line\">\t\t<span class=\"string\">\"userId\"</span>:<span class=\"number\">123</span>,\t<span class=\"comment\">//用户ID</span></span><br><span class=\"line\">\t\t<span class=\"string\">\"userName\"</span>:<span class=\"string\">\"张三\"</span>\t<span class=\"comment\">//用户名</span></span><br><span class=\"line\">\t&#125;,</span><br><span class=\"line\">\t<span class=\"string\">\"msg\"</span>: <span class=\"string\">\"success\"</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">Result</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">status</span>&gt;</span>0<span class=\"tag\">&lt;/<span class=\"name\">status</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">msg</span>&gt;</span>success<span class=\"tag\">&lt;/<span class=\"name\">msg</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">data</span>&gt;</span></span><br><span class=\"line\">\t\t<span class=\"tag\">&lt;<span class=\"name\">userId</span> <span class=\"attr\">value</span>=<span class=\"string\">\"123\"</span>/&gt;</span></span><br><span class=\"line\">\t\t<span class=\"tag\">&lt;<span class=\"name\">userName</span> <span class=\"attr\">value</span>=<span class=\"string\">\"张三\"</span>/&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;/<span class=\"name\">data</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">Result</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<h4 id=\"返回状态\"><a href=\"#返回状态\" class=\"headerlink\" title=\"返回状态\"></a>返回状态</h4><p>必要时需要列出所有返回状态对应的数据格式。</p>\n<table>\n<thead>\n<tr>\n<th>状态值</th>\n<th>状态说明</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>0</td>\n<td>成功</td>\n</tr>\n<tr>\n<td>500</td>\n<td>系统异常</td>\n</tr>\n<tr>\n<td>404</td>\n<td>请求不存在</td>\n</tr>\n</tbody>\n</table>\n"},{"title":"初识NSQ分布式实时消息架构","_content":"### 1.NSQ知识普及\n\nNSQ是一个基于Go语言的开源的分布式实时消息平台，他的代码托管在GitHub上。\n\n```\nhttps://github.com/nsqio/nsq\n```\n\nNSQ可用于大规模系统的实时消息服务，它的设计目标是为在分布式环境下提供一个强大的去除中心化的分布式服务架构，可以每天处理数以亿计的实时消息。NSQ的优点是无单点故障、故障容错、高可用性和信息传递的高可靠性。NSQ安装部署简单，容易水平扩展，目前已有很多公司都是采用其作为自身企业内部的实时消息服务。而且它的灵活性很强，支持很多种协议。官方直接提供了拆箱可用的Go库和Python库。好，其他的就不废话了，随便搜索下NSQ相关的博文或者去NSQ的官方网站了解更详细的信息吧。\n\n### 2.NSQ的四大组件\n\nnsqlookupd：管理nsqd节点拓扑信息并提供最终一致性的发现服务的守护进程\n\nnsqd：负责接收、排队、转发消息到客户端的守护进程，并且定时向nsqlookupd服务发送心跳\n\nnsqadmin：nsq的web统计界面，可实时查看集群的统计数据和执行一些管理任务 \n\nutilities：常见基础功能、数据流处理工具，如nsq_stat、nsq_tail、nsq_to_file、nsq_to_http、nsq_to_nsq、to_nsq \n\n### 3.NSQ依赖\n\n#### 3.1 GO：NSQ是有GO语言开发的，必不可少的需要事先安装配置好GO相关的环境变量信息。\n\n（i）首先自然是去官网找到对应系统的较新较稳定的版本安装包，中文站地址：http://golangtc.com/download\n\n由于其官方地址在国外，下载速度可能比较慢，推荐使用本地下载的链接进行下载。\n\n```bash\nwget http://golangtc.com/static/go/go1.5beta1.linux-amd64.tar.gz\n```\n\n（ii）下载完安装包后解压并且复制到/usr/local/目录下\n\n```bash\ntar zxvf go1.5beta1.linux-amd64.tar.gz\n\nmv go /usr/local\n```\n\n（iii）GO环境变量配置\n\n打开环境变量配置文件\n\n```bash\nsudo vim /etc/profile\n```\n\n然后在文件的最后追加以下配置\n\n```bash\nexport GOROOT=/usr/local/go\nexport GOPATH=\\$GOROOT/bin\nexport PATH=\\$PATH:\\$GOPATH\n```\n\n配置好环境变量后再让它马上生效\n\n```bash\nsource /etc/profile\n```\n\n最后查看是否安装成功\n\n```bash\ngo version\n```\n\n如果控制台打印出了对应的版本号信息，那就恭喜你了，等等。。。别急，这才刚刚开始。\n\n#### 3.2 GIT：因为稍候需要从github上获取NSQ的安装文件\n\n直接命令安装就好\n\n```bash\nyum install git\n```\n\n### 4.安装NSQ\n\n命令行直接执行下面的命令安装NSQ\n\n```bash\ngo get github.com/kr/godep\ngo get github.com/bmizerany/assert\ngodep get github.com/bitly/nsq/...\n```\n\n**注：godev为GO的语言依赖管理包，assert为GO的测试框架，至于最后一个嘛，自己猜吧**\n\n到此，NSQ就安装好了，接下来就可以一起愉快的玩耍了\n\n### 5.启动部署和测试\n\n这节的内容就直接翻译了官网的原文了，有兴趣的可以自己去看下\n\nhttp://nsq.io/overview/quick_start.html\n\n#### 5.1 打开一个终端，启动nsqlookupd\n\n```bash\nnsqlookupd\n```\n\n#### 5.2 再打开一个终端，启动nsq\n\n```bash\nnsqd --lookupd-tcp-address=127.0.0.1:4160\n```\n#### 5.3 再打开一个终端，启动nsqadmin\n\n```bash\nnsqadmin --lookupd-http-address=127.0.0.1:4161\n```\n#### 5.4 创建一个topic并且发布一条消息，由于nsq支持http协议发布消息，我们可以直接使用curl命令。\n\n```bash\ncurl -d 'hello world 1' 'http://127.0.0.1:4151/put?topic=test'\n```\n\n#### 5.5 再开一个终端，@~@!!!,开了好多终端了，来处理消息数据流，将消息写入/tmp文件加下的日志文件,文件名默认由主题topic+主机+日期时间戳组成。\n\n```bash\nnsq_to_file --topic=test --output-dir=/tmp --lookupd-http-address=127.0.0.1:4161\n```\n#### 5.6 我们再发布两条消息，看看日志文件中的变化。\n\n```bash\ncurl -d 'hello world 2' 'http://127.0.0.1:4151/put?topic=test'\ncurl -d 'hello world 3' 'http://127.0.0.1:4151/put?topic=test'\n```\n#### 5.7特别说明\n需要特别注意的是这里的nsq_to_file客户端进程并不确定消息什么时候会发布，所以它会在连接没有断开的情况下定时去nsqlookupd中检索消息，确保消息不丢失。\n\n![这里写图片描述](http://img.blog.csdn.net/20150830214444426)\n\n![这里写图片描述](http://img.blog.csdn.net/20150830214529061)\n\n![这里写图片描述](http://img.blog.csdn.net/20150830214544464)\n\n### 6.nsqadmin的web统计\n![这里写图片描述](http://img.blog.csdn.net/20150830214340984)\n\nnsq自身提供了一个便于查看和操作的web界面，可以实时查看统计信息和执行一些管理任务。\n\n#### 6.1浏览器打开nsqadmin的web页\n\n```bash\nhttp://192.168.1.111:4171/\n```\n\n由于默认情况下linux系统，nsqadmin的默认端口4171限制了对外访问，所以我们要打开4171端口的路由访问限制，便于外部系统的浏览器访问。\n\n```bash\niptables -A  INPUT -p tcp --dport 4171 -j ACCEPT\n```\n\n- 参数讲解：\n–A 添加一条规则的意思\n–p 指定是什么协议，这里是tcp协议\n–dport 就是目标端口，当数据从外部进入服务器为目标端口\n–sport 数据从服务器出去，则为数据源端口使用 \n–j 就是指定是 ACCEPT -接收 或者 DROP 不接收\n\n#### 6.2 Topics界面\n![这里写图片描述](http://img.blog.csdn.net/20150830213809966)\n\n这里详细的列出了所有的发布的topic主题列表，可以点进去查看单个主题的详细统计信息。还可以管理主题，比如清空主题的消息队列，删除主题，暂停主题等等。\n\n#### 6.3 Nodes节点列表\n![这里写图片描述](http://img.blog.csdn.net/20150830213848425)\n\n这个页面可以查看当前nsqlookupd协调管理的节点列表，以及一些连接信息，比如端口，连接数，主题和主题数量等等。\n\n#### 6.4 Counter消息计数页\n![这里写图片描述](http://img.blog.csdn.net/20150830214013450)\n\n这个页面最简洁，中间一个硕大的计数牌，展示已经处理过的消息数目。\n\n#### 6.5 Lookup界面\n![这里写图片描述](http://img.blog.csdn.net/20150830214233531)\n\n这里我们可以创建消息主题和消息通道。\n","source":"_posts/nsq-start.md","raw":"---\ntitle: 初识NSQ分布式实时消息架构 \n---\n### 1.NSQ知识普及\n\nNSQ是一个基于Go语言的开源的分布式实时消息平台，他的代码托管在GitHub上。\n\n```\nhttps://github.com/nsqio/nsq\n```\n\nNSQ可用于大规模系统的实时消息服务，它的设计目标是为在分布式环境下提供一个强大的去除中心化的分布式服务架构，可以每天处理数以亿计的实时消息。NSQ的优点是无单点故障、故障容错、高可用性和信息传递的高可靠性。NSQ安装部署简单，容易水平扩展，目前已有很多公司都是采用其作为自身企业内部的实时消息服务。而且它的灵活性很强，支持很多种协议。官方直接提供了拆箱可用的Go库和Python库。好，其他的就不废话了，随便搜索下NSQ相关的博文或者去NSQ的官方网站了解更详细的信息吧。\n\n### 2.NSQ的四大组件\n\nnsqlookupd：管理nsqd节点拓扑信息并提供最终一致性的发现服务的守护进程\n\nnsqd：负责接收、排队、转发消息到客户端的守护进程，并且定时向nsqlookupd服务发送心跳\n\nnsqadmin：nsq的web统计界面，可实时查看集群的统计数据和执行一些管理任务 \n\nutilities：常见基础功能、数据流处理工具，如nsq_stat、nsq_tail、nsq_to_file、nsq_to_http、nsq_to_nsq、to_nsq \n\n### 3.NSQ依赖\n\n#### 3.1 GO：NSQ是有GO语言开发的，必不可少的需要事先安装配置好GO相关的环境变量信息。\n\n（i）首先自然是去官网找到对应系统的较新较稳定的版本安装包，中文站地址：http://golangtc.com/download\n\n由于其官方地址在国外，下载速度可能比较慢，推荐使用本地下载的链接进行下载。\n\n```bash\nwget http://golangtc.com/static/go/go1.5beta1.linux-amd64.tar.gz\n```\n\n（ii）下载完安装包后解压并且复制到/usr/local/目录下\n\n```bash\ntar zxvf go1.5beta1.linux-amd64.tar.gz\n\nmv go /usr/local\n```\n\n（iii）GO环境变量配置\n\n打开环境变量配置文件\n\n```bash\nsudo vim /etc/profile\n```\n\n然后在文件的最后追加以下配置\n\n```bash\nexport GOROOT=/usr/local/go\nexport GOPATH=\\$GOROOT/bin\nexport PATH=\\$PATH:\\$GOPATH\n```\n\n配置好环境变量后再让它马上生效\n\n```bash\nsource /etc/profile\n```\n\n最后查看是否安装成功\n\n```bash\ngo version\n```\n\n如果控制台打印出了对应的版本号信息，那就恭喜你了，等等。。。别急，这才刚刚开始。\n\n#### 3.2 GIT：因为稍候需要从github上获取NSQ的安装文件\n\n直接命令安装就好\n\n```bash\nyum install git\n```\n\n### 4.安装NSQ\n\n命令行直接执行下面的命令安装NSQ\n\n```bash\ngo get github.com/kr/godep\ngo get github.com/bmizerany/assert\ngodep get github.com/bitly/nsq/...\n```\n\n**注：godev为GO的语言依赖管理包，assert为GO的测试框架，至于最后一个嘛，自己猜吧**\n\n到此，NSQ就安装好了，接下来就可以一起愉快的玩耍了\n\n### 5.启动部署和测试\n\n这节的内容就直接翻译了官网的原文了，有兴趣的可以自己去看下\n\nhttp://nsq.io/overview/quick_start.html\n\n#### 5.1 打开一个终端，启动nsqlookupd\n\n```bash\nnsqlookupd\n```\n\n#### 5.2 再打开一个终端，启动nsq\n\n```bash\nnsqd --lookupd-tcp-address=127.0.0.1:4160\n```\n#### 5.3 再打开一个终端，启动nsqadmin\n\n```bash\nnsqadmin --lookupd-http-address=127.0.0.1:4161\n```\n#### 5.4 创建一个topic并且发布一条消息，由于nsq支持http协议发布消息，我们可以直接使用curl命令。\n\n```bash\ncurl -d 'hello world 1' 'http://127.0.0.1:4151/put?topic=test'\n```\n\n#### 5.5 再开一个终端，@~@!!!,开了好多终端了，来处理消息数据流，将消息写入/tmp文件加下的日志文件,文件名默认由主题topic+主机+日期时间戳组成。\n\n```bash\nnsq_to_file --topic=test --output-dir=/tmp --lookupd-http-address=127.0.0.1:4161\n```\n#### 5.6 我们再发布两条消息，看看日志文件中的变化。\n\n```bash\ncurl -d 'hello world 2' 'http://127.0.0.1:4151/put?topic=test'\ncurl -d 'hello world 3' 'http://127.0.0.1:4151/put?topic=test'\n```\n#### 5.7特别说明\n需要特别注意的是这里的nsq_to_file客户端进程并不确定消息什么时候会发布，所以它会在连接没有断开的情况下定时去nsqlookupd中检索消息，确保消息不丢失。\n\n![这里写图片描述](http://img.blog.csdn.net/20150830214444426)\n\n![这里写图片描述](http://img.blog.csdn.net/20150830214529061)\n\n![这里写图片描述](http://img.blog.csdn.net/20150830214544464)\n\n### 6.nsqadmin的web统计\n![这里写图片描述](http://img.blog.csdn.net/20150830214340984)\n\nnsq自身提供了一个便于查看和操作的web界面，可以实时查看统计信息和执行一些管理任务。\n\n#### 6.1浏览器打开nsqadmin的web页\n\n```bash\nhttp://192.168.1.111:4171/\n```\n\n由于默认情况下linux系统，nsqadmin的默认端口4171限制了对外访问，所以我们要打开4171端口的路由访问限制，便于外部系统的浏览器访问。\n\n```bash\niptables -A  INPUT -p tcp --dport 4171 -j ACCEPT\n```\n\n- 参数讲解：\n–A 添加一条规则的意思\n–p 指定是什么协议，这里是tcp协议\n–dport 就是目标端口，当数据从外部进入服务器为目标端口\n–sport 数据从服务器出去，则为数据源端口使用 \n–j 就是指定是 ACCEPT -接收 或者 DROP 不接收\n\n#### 6.2 Topics界面\n![这里写图片描述](http://img.blog.csdn.net/20150830213809966)\n\n这里详细的列出了所有的发布的topic主题列表，可以点进去查看单个主题的详细统计信息。还可以管理主题，比如清空主题的消息队列，删除主题，暂停主题等等。\n\n#### 6.3 Nodes节点列表\n![这里写图片描述](http://img.blog.csdn.net/20150830213848425)\n\n这个页面可以查看当前nsqlookupd协调管理的节点列表，以及一些连接信息，比如端口，连接数，主题和主题数量等等。\n\n#### 6.4 Counter消息计数页\n![这里写图片描述](http://img.blog.csdn.net/20150830214013450)\n\n这个页面最简洁，中间一个硕大的计数牌，展示已经处理过的消息数目。\n\n#### 6.5 Lookup界面\n![这里写图片描述](http://img.blog.csdn.net/20150830214233531)\n\n这里我们可以创建消息主题和消息通道。\n","slug":"nsq-start","published":1,"date":"2016-03-28T14:22:52.089Z","updated":"2016-03-28T14:58:27.125Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cimexdt770002ogmwf0o86h9h","content":"<h3 id=\"1-NSQ知识普及\"><a href=\"#1-NSQ知识普及\" class=\"headerlink\" title=\"1.NSQ知识普及\"></a>1.NSQ知识普及</h3><p>NSQ是一个基于Go语言的开源的分布式实时消息平台，他的代码托管在GitHub上。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">https://github.com/nsqio/nsq</span><br></pre></td></tr></table></figure>\n<p>NSQ可用于大规模系统的实时消息服务，它的设计目标是为在分布式环境下提供一个强大的去除中心化的分布式服务架构，可以每天处理数以亿计的实时消息。NSQ的优点是无单点故障、故障容错、高可用性和信息传递的高可靠性。NSQ安装部署简单，容易水平扩展，目前已有很多公司都是采用其作为自身企业内部的实时消息服务。而且它的灵活性很强，支持很多种协议。官方直接提供了拆箱可用的Go库和Python库。好，其他的就不废话了，随便搜索下NSQ相关的博文或者去NSQ的官方网站了解更详细的信息吧。</p>\n<h3 id=\"2-NSQ的四大组件\"><a href=\"#2-NSQ的四大组件\" class=\"headerlink\" title=\"2.NSQ的四大组件\"></a>2.NSQ的四大组件</h3><p>nsqlookupd：管理nsqd节点拓扑信息并提供最终一致性的发现服务的守护进程</p>\n<p>nsqd：负责接收、排队、转发消息到客户端的守护进程，并且定时向nsqlookupd服务发送心跳</p>\n<p>nsqadmin：nsq的web统计界面，可实时查看集群的统计数据和执行一些管理任务 </p>\n<p>utilities：常见基础功能、数据流处理工具，如nsq_stat、nsq_tail、nsq_to_file、nsq_to_http、nsq_to_nsq、to_nsq </p>\n<h3 id=\"3-NSQ依赖\"><a href=\"#3-NSQ依赖\" class=\"headerlink\" title=\"3.NSQ依赖\"></a>3.NSQ依赖</h3><h4 id=\"3-1-GO：NSQ是有GO语言开发的，必不可少的需要事先安装配置好GO相关的环境变量信息。\"><a href=\"#3-1-GO：NSQ是有GO语言开发的，必不可少的需要事先安装配置好GO相关的环境变量信息。\" class=\"headerlink\" title=\"3.1 GO：NSQ是有GO语言开发的，必不可少的需要事先安装配置好GO相关的环境变量信息。\"></a>3.1 GO：NSQ是有GO语言开发的，必不可少的需要事先安装配置好GO相关的环境变量信息。</h4><p>（i）首先自然是去官网找到对应系统的较新较稳定的版本安装包，中文站地址：<a href=\"http://golangtc.com/download\" target=\"_blank\" rel=\"external\">http://golangtc.com/download</a></p>\n<p>由于其官方地址在国外，下载速度可能比较慢，推荐使用本地下载的链接进行下载。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">wget http://golangtc.com/static/go/go1.5beta1.linux-amd64.tar.gz</span><br></pre></td></tr></table></figure>\n<p>（ii）下载完安装包后解压并且复制到/usr/local/目录下</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">tar zxvf go1.5beta1.linux-amd64.tar.gz</span><br><span class=\"line\"></span><br><span class=\"line\">mv go /usr/<span class=\"built_in\">local</span></span><br></pre></td></tr></table></figure>\n<p>（iii）GO环境变量配置</p>\n<p>打开环境变量配置文件</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo vim /etc/profile</span><br></pre></td></tr></table></figure>\n<p>然后在文件的最后追加以下配置</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">export</span> GOROOT=/usr/<span class=\"built_in\">local</span>/go</span><br><span class=\"line\"><span class=\"built_in\">export</span> GOPATH=\\<span class=\"variable\">$GOROOT</span>/bin</span><br><span class=\"line\"><span class=\"built_in\">export</span> PATH=\\<span class=\"variable\">$PATH</span>:\\<span class=\"variable\">$GOPATH</span></span><br></pre></td></tr></table></figure>\n<p>配置好环境变量后再让它马上生效</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">source</span> /etc/profile</span><br></pre></td></tr></table></figure>\n<p>最后查看是否安装成功</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">go version</span><br></pre></td></tr></table></figure>\n<p>如果控制台打印出了对应的版本号信息，那就恭喜你了，等等。。。别急，这才刚刚开始。</p>\n<h4 id=\"3-2-GIT：因为稍候需要从github上获取NSQ的安装文件\"><a href=\"#3-2-GIT：因为稍候需要从github上获取NSQ的安装文件\" class=\"headerlink\" title=\"3.2 GIT：因为稍候需要从github上获取NSQ的安装文件\"></a>3.2 GIT：因为稍候需要从github上获取NSQ的安装文件</h4><p>直接命令安装就好</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">yum install git</span><br></pre></td></tr></table></figure>\n<h3 id=\"4-安装NSQ\"><a href=\"#4-安装NSQ\" class=\"headerlink\" title=\"4.安装NSQ\"></a>4.安装NSQ</h3><p>命令行直接执行下面的命令安装NSQ</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">go get github.com/kr/godep</span><br><span class=\"line\">go get github.com/bmizerany/assert</span><br><span class=\"line\">godep get github.com/bitly/nsq/...</span><br></pre></td></tr></table></figure>\n<p><strong>注：godev为GO的语言依赖管理包，assert为GO的测试框架，至于最后一个嘛，自己猜吧</strong></p>\n<p>到此，NSQ就安装好了，接下来就可以一起愉快的玩耍了</p>\n<h3 id=\"5-启动部署和测试\"><a href=\"#5-启动部署和测试\" class=\"headerlink\" title=\"5.启动部署和测试\"></a>5.启动部署和测试</h3><p>这节的内容就直接翻译了官网的原文了，有兴趣的可以自己去看下</p>\n<p><a href=\"http://nsq.io/overview/quick_start.html\" target=\"_blank\" rel=\"external\">http://nsq.io/overview/quick_start.html</a></p>\n<h4 id=\"5-1-打开一个终端，启动nsqlookupd\"><a href=\"#5-1-打开一个终端，启动nsqlookupd\" class=\"headerlink\" title=\"5.1 打开一个终端，启动nsqlookupd\"></a>5.1 打开一个终端，启动nsqlookupd</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">nsqlookupd</span><br></pre></td></tr></table></figure>\n<h4 id=\"5-2-再打开一个终端，启动nsq\"><a href=\"#5-2-再打开一个终端，启动nsq\" class=\"headerlink\" title=\"5.2 再打开一个终端，启动nsq\"></a>5.2 再打开一个终端，启动nsq</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">nsqd --lookupd-tcp-address=127.0.0.1:4160</span><br></pre></td></tr></table></figure>\n<h4 id=\"5-3-再打开一个终端，启动nsqadmin\"><a href=\"#5-3-再打开一个终端，启动nsqadmin\" class=\"headerlink\" title=\"5.3 再打开一个终端，启动nsqadmin\"></a>5.3 再打开一个终端，启动nsqadmin</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">nsqadmin --lookupd-http-address=127.0.0.1:4161</span><br></pre></td></tr></table></figure>\n<h4 id=\"5-4-创建一个topic并且发布一条消息，由于nsq支持http协议发布消息，我们可以直接使用curl命令。\"><a href=\"#5-4-创建一个topic并且发布一条消息，由于nsq支持http协议发布消息，我们可以直接使用curl命令。\" class=\"headerlink\" title=\"5.4 创建一个topic并且发布一条消息，由于nsq支持http协议发布消息，我们可以直接使用curl命令。\"></a>5.4 创建一个topic并且发布一条消息，由于nsq支持http协议发布消息，我们可以直接使用curl命令。</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">curl <span class=\"_\">-d</span> <span class=\"string\">'hello world 1'</span> <span class=\"string\">'http://127.0.0.1:4151/put?topic=test'</span></span><br></pre></td></tr></table></figure>\n<h4 id=\"5-5-再开一个终端，-开了好多终端了，来处理消息数据流，将消息写入-tmp文件加下的日志文件-文件名默认由主题topic-主机-日期时间戳组成。\"><a href=\"#5-5-再开一个终端，-开了好多终端了，来处理消息数据流，将消息写入-tmp文件加下的日志文件-文件名默认由主题topic-主机-日期时间戳组成。\" class=\"headerlink\" title=\"5.5 再开一个终端，@~@!!!,开了好多终端了，来处理消息数据流，将消息写入/tmp文件加下的日志文件,文件名默认由主题topic+主机+日期时间戳组成。\"></a>5.5 再开一个终端，@~@!!!,开了好多终端了，来处理消息数据流，将消息写入/tmp文件加下的日志文件,文件名默认由主题topic+主机+日期时间戳组成。</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">nsq_to_file --topic=<span class=\"built_in\">test</span> --output-dir=/tmp --lookupd-http-address=127.0.0.1:4161</span><br></pre></td></tr></table></figure>\n<h4 id=\"5-6-我们再发布两条消息，看看日志文件中的变化。\"><a href=\"#5-6-我们再发布两条消息，看看日志文件中的变化。\" class=\"headerlink\" title=\"5.6 我们再发布两条消息，看看日志文件中的变化。\"></a>5.6 我们再发布两条消息，看看日志文件中的变化。</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">curl <span class=\"_\">-d</span> <span class=\"string\">'hello world 2'</span> <span class=\"string\">'http://127.0.0.1:4151/put?topic=test'</span></span><br><span class=\"line\">curl <span class=\"_\">-d</span> <span class=\"string\">'hello world 3'</span> <span class=\"string\">'http://127.0.0.1:4151/put?topic=test'</span></span><br></pre></td></tr></table></figure>\n<h4 id=\"5-7特别说明\"><a href=\"#5-7特别说明\" class=\"headerlink\" title=\"5.7特别说明\"></a>5.7特别说明</h4><p>需要特别注意的是这里的nsq_to_file客户端进程并不确定消息什么时候会发布，所以它会在连接没有断开的情况下定时去nsqlookupd中检索消息，确保消息不丢失。</p>\n<p><img src=\"http://img.blog.csdn.net/20150830214444426\" alt=\"这里写图片描述\"></p>\n<p><img src=\"http://img.blog.csdn.net/20150830214529061\" alt=\"这里写图片描述\"></p>\n<p><img src=\"http://img.blog.csdn.net/20150830214544464\" alt=\"这里写图片描述\"></p>\n<h3 id=\"6-nsqadmin的web统计\"><a href=\"#6-nsqadmin的web统计\" class=\"headerlink\" title=\"6.nsqadmin的web统计\"></a>6.nsqadmin的web统计</h3><p><img src=\"http://img.blog.csdn.net/20150830214340984\" alt=\"这里写图片描述\"></p>\n<p>nsq自身提供了一个便于查看和操作的web界面，可以实时查看统计信息和执行一些管理任务。</p>\n<h4 id=\"6-1浏览器打开nsqadmin的web页\"><a href=\"#6-1浏览器打开nsqadmin的web页\" class=\"headerlink\" title=\"6.1浏览器打开nsqadmin的web页\"></a>6.1浏览器打开nsqadmin的web页</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">http://192.168.1.111:4171/</span><br></pre></td></tr></table></figure>\n<p>由于默认情况下linux系统，nsqadmin的默认端口4171限制了对外访问，所以我们要打开4171端口的路由访问限制，便于外部系统的浏览器访问。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">iptables -A  INPUT -p tcp --dport 4171 -j ACCEPT</span><br></pre></td></tr></table></figure>\n<ul>\n<li>参数讲解：<br>–A 添加一条规则的意思<br>–p 指定是什么协议，这里是tcp协议<br>–dport 就是目标端口，当数据从外部进入服务器为目标端口<br>–sport 数据从服务器出去，则为数据源端口使用<br>–j 就是指定是 ACCEPT -接收 或者 DROP 不接收</li>\n</ul>\n<h4 id=\"6-2-Topics界面\"><a href=\"#6-2-Topics界面\" class=\"headerlink\" title=\"6.2 Topics界面\"></a>6.2 Topics界面</h4><p><img src=\"http://img.blog.csdn.net/20150830213809966\" alt=\"这里写图片描述\"></p>\n<p>这里详细的列出了所有的发布的topic主题列表，可以点进去查看单个主题的详细统计信息。还可以管理主题，比如清空主题的消息队列，删除主题，暂停主题等等。</p>\n<h4 id=\"6-3-Nodes节点列表\"><a href=\"#6-3-Nodes节点列表\" class=\"headerlink\" title=\"6.3 Nodes节点列表\"></a>6.3 Nodes节点列表</h4><p><img src=\"http://img.blog.csdn.net/20150830213848425\" alt=\"这里写图片描述\"></p>\n<p>这个页面可以查看当前nsqlookupd协调管理的节点列表，以及一些连接信息，比如端口，连接数，主题和主题数量等等。</p>\n<h4 id=\"6-4-Counter消息计数页\"><a href=\"#6-4-Counter消息计数页\" class=\"headerlink\" title=\"6.4 Counter消息计数页\"></a>6.4 Counter消息计数页</h4><p><img src=\"http://img.blog.csdn.net/20150830214013450\" alt=\"这里写图片描述\"></p>\n<p>这个页面最简洁，中间一个硕大的计数牌，展示已经处理过的消息数目。</p>\n<h4 id=\"6-5-Lookup界面\"><a href=\"#6-5-Lookup界面\" class=\"headerlink\" title=\"6.5 Lookup界面\"></a>6.5 Lookup界面</h4><p><img src=\"http://img.blog.csdn.net/20150830214233531\" alt=\"这里写图片描述\"></p>\n<p>这里我们可以创建消息主题和消息通道。</p>\n","excerpt":"","more":"<h3 id=\"1-NSQ知识普及\"><a href=\"#1-NSQ知识普及\" class=\"headerlink\" title=\"1.NSQ知识普及\"></a>1.NSQ知识普及</h3><p>NSQ是一个基于Go语言的开源的分布式实时消息平台，他的代码托管在GitHub上。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">https://github.com/nsqio/nsq</span><br></pre></td></tr></table></figure>\n<p>NSQ可用于大规模系统的实时消息服务，它的设计目标是为在分布式环境下提供一个强大的去除中心化的分布式服务架构，可以每天处理数以亿计的实时消息。NSQ的优点是无单点故障、故障容错、高可用性和信息传递的高可靠性。NSQ安装部署简单，容易水平扩展，目前已有很多公司都是采用其作为自身企业内部的实时消息服务。而且它的灵活性很强，支持很多种协议。官方直接提供了拆箱可用的Go库和Python库。好，其他的就不废话了，随便搜索下NSQ相关的博文或者去NSQ的官方网站了解更详细的信息吧。</p>\n<h3 id=\"2-NSQ的四大组件\"><a href=\"#2-NSQ的四大组件\" class=\"headerlink\" title=\"2.NSQ的四大组件\"></a>2.NSQ的四大组件</h3><p>nsqlookupd：管理nsqd节点拓扑信息并提供最终一致性的发现服务的守护进程</p>\n<p>nsqd：负责接收、排队、转发消息到客户端的守护进程，并且定时向nsqlookupd服务发送心跳</p>\n<p>nsqadmin：nsq的web统计界面，可实时查看集群的统计数据和执行一些管理任务 </p>\n<p>utilities：常见基础功能、数据流处理工具，如nsq_stat、nsq_tail、nsq_to_file、nsq_to_http、nsq_to_nsq、to_nsq </p>\n<h3 id=\"3-NSQ依赖\"><a href=\"#3-NSQ依赖\" class=\"headerlink\" title=\"3.NSQ依赖\"></a>3.NSQ依赖</h3><h4 id=\"3-1-GO：NSQ是有GO语言开发的，必不可少的需要事先安装配置好GO相关的环境变量信息。\"><a href=\"#3-1-GO：NSQ是有GO语言开发的，必不可少的需要事先安装配置好GO相关的环境变量信息。\" class=\"headerlink\" title=\"3.1 GO：NSQ是有GO语言开发的，必不可少的需要事先安装配置好GO相关的环境变量信息。\"></a>3.1 GO：NSQ是有GO语言开发的，必不可少的需要事先安装配置好GO相关的环境变量信息。</h4><p>（i）首先自然是去官网找到对应系统的较新较稳定的版本安装包，中文站地址：<a href=\"http://golangtc.com/download\">http://golangtc.com/download</a></p>\n<p>由于其官方地址在国外，下载速度可能比较慢，推荐使用本地下载的链接进行下载。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">wget http://golangtc.com/static/go/go1.5beta1.linux-amd64.tar.gz</span><br></pre></td></tr></table></figure>\n<p>（ii）下载完安装包后解压并且复制到/usr/local/目录下</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">tar zxvf go1.5beta1.linux-amd64.tar.gz</span><br><span class=\"line\"></span><br><span class=\"line\">mv go /usr/<span class=\"built_in\">local</span></span><br></pre></td></tr></table></figure>\n<p>（iii）GO环境变量配置</p>\n<p>打开环境变量配置文件</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo vim /etc/profile</span><br></pre></td></tr></table></figure>\n<p>然后在文件的最后追加以下配置</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">export</span> GOROOT=/usr/<span class=\"built_in\">local</span>/go</span><br><span class=\"line\"><span class=\"built_in\">export</span> GOPATH=\\<span class=\"variable\">$GOROOT</span>/bin</span><br><span class=\"line\"><span class=\"built_in\">export</span> PATH=\\<span class=\"variable\">$PATH</span>:\\<span class=\"variable\">$GOPATH</span></span><br></pre></td></tr></table></figure>\n<p>配置好环境变量后再让它马上生效</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">source</span> /etc/profile</span><br></pre></td></tr></table></figure>\n<p>最后查看是否安装成功</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">go version</span><br></pre></td></tr></table></figure>\n<p>如果控制台打印出了对应的版本号信息，那就恭喜你了，等等。。。别急，这才刚刚开始。</p>\n<h4 id=\"3-2-GIT：因为稍候需要从github上获取NSQ的安装文件\"><a href=\"#3-2-GIT：因为稍候需要从github上获取NSQ的安装文件\" class=\"headerlink\" title=\"3.2 GIT：因为稍候需要从github上获取NSQ的安装文件\"></a>3.2 GIT：因为稍候需要从github上获取NSQ的安装文件</h4><p>直接命令安装就好</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">yum install git</span><br></pre></td></tr></table></figure>\n<h3 id=\"4-安装NSQ\"><a href=\"#4-安装NSQ\" class=\"headerlink\" title=\"4.安装NSQ\"></a>4.安装NSQ</h3><p>命令行直接执行下面的命令安装NSQ</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">go get github.com/kr/godep</span><br><span class=\"line\">go get github.com/bmizerany/assert</span><br><span class=\"line\">godep get github.com/bitly/nsq/...</span><br></pre></td></tr></table></figure>\n<p><strong>注：godev为GO的语言依赖管理包，assert为GO的测试框架，至于最后一个嘛，自己猜吧</strong></p>\n<p>到此，NSQ就安装好了，接下来就可以一起愉快的玩耍了</p>\n<h3 id=\"5-启动部署和测试\"><a href=\"#5-启动部署和测试\" class=\"headerlink\" title=\"5.启动部署和测试\"></a>5.启动部署和测试</h3><p>这节的内容就直接翻译了官网的原文了，有兴趣的可以自己去看下</p>\n<p><a href=\"http://nsq.io/overview/quick_start.html\">http://nsq.io/overview/quick_start.html</a></p>\n<h4 id=\"5-1-打开一个终端，启动nsqlookupd\"><a href=\"#5-1-打开一个终端，启动nsqlookupd\" class=\"headerlink\" title=\"5.1 打开一个终端，启动nsqlookupd\"></a>5.1 打开一个终端，启动nsqlookupd</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">nsqlookupd</span><br></pre></td></tr></table></figure>\n<h4 id=\"5-2-再打开一个终端，启动nsq\"><a href=\"#5-2-再打开一个终端，启动nsq\" class=\"headerlink\" title=\"5.2 再打开一个终端，启动nsq\"></a>5.2 再打开一个终端，启动nsq</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">nsqd --lookupd-tcp-address=127.0.0.1:4160</span><br></pre></td></tr></table></figure>\n<h4 id=\"5-3-再打开一个终端，启动nsqadmin\"><a href=\"#5-3-再打开一个终端，启动nsqadmin\" class=\"headerlink\" title=\"5.3 再打开一个终端，启动nsqadmin\"></a>5.3 再打开一个终端，启动nsqadmin</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">nsqadmin --lookupd-http-address=127.0.0.1:4161</span><br></pre></td></tr></table></figure>\n<h4 id=\"5-4-创建一个topic并且发布一条消息，由于nsq支持http协议发布消息，我们可以直接使用curl命令。\"><a href=\"#5-4-创建一个topic并且发布一条消息，由于nsq支持http协议发布消息，我们可以直接使用curl命令。\" class=\"headerlink\" title=\"5.4 创建一个topic并且发布一条消息，由于nsq支持http协议发布消息，我们可以直接使用curl命令。\"></a>5.4 创建一个topic并且发布一条消息，由于nsq支持http协议发布消息，我们可以直接使用curl命令。</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">curl <span class=\"_\">-d</span> <span class=\"string\">'hello world 1'</span> <span class=\"string\">'http://127.0.0.1:4151/put?topic=test'</span></span><br></pre></td></tr></table></figure>\n<h4 id=\"5-5-再开一个终端，-开了好多终端了，来处理消息数据流，将消息写入-tmp文件加下的日志文件-文件名默认由主题topic-主机-日期时间戳组成。\"><a href=\"#5-5-再开一个终端，-开了好多终端了，来处理消息数据流，将消息写入-tmp文件加下的日志文件-文件名默认由主题topic-主机-日期时间戳组成。\" class=\"headerlink\" title=\"5.5 再开一个终端，@~@!!!,开了好多终端了，来处理消息数据流，将消息写入/tmp文件加下的日志文件,文件名默认由主题topic+主机+日期时间戳组成。\"></a>5.5 再开一个终端，@~@!!!,开了好多终端了，来处理消息数据流，将消息写入/tmp文件加下的日志文件,文件名默认由主题topic+主机+日期时间戳组成。</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">nsq_to_file --topic=<span class=\"built_in\">test</span> --output-dir=/tmp --lookupd-http-address=127.0.0.1:4161</span><br></pre></td></tr></table></figure>\n<h4 id=\"5-6-我们再发布两条消息，看看日志文件中的变化。\"><a href=\"#5-6-我们再发布两条消息，看看日志文件中的变化。\" class=\"headerlink\" title=\"5.6 我们再发布两条消息，看看日志文件中的变化。\"></a>5.6 我们再发布两条消息，看看日志文件中的变化。</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">curl <span class=\"_\">-d</span> <span class=\"string\">'hello world 2'</span> <span class=\"string\">'http://127.0.0.1:4151/put?topic=test'</span></span><br><span class=\"line\">curl <span class=\"_\">-d</span> <span class=\"string\">'hello world 3'</span> <span class=\"string\">'http://127.0.0.1:4151/put?topic=test'</span></span><br></pre></td></tr></table></figure>\n<h4 id=\"5-7特别说明\"><a href=\"#5-7特别说明\" class=\"headerlink\" title=\"5.7特别说明\"></a>5.7特别说明</h4><p>需要特别注意的是这里的nsq_to_file客户端进程并不确定消息什么时候会发布，所以它会在连接没有断开的情况下定时去nsqlookupd中检索消息，确保消息不丢失。</p>\n<p><img src=\"http://img.blog.csdn.net/20150830214444426\" alt=\"这里写图片描述\"></p>\n<p><img src=\"http://img.blog.csdn.net/20150830214529061\" alt=\"这里写图片描述\"></p>\n<p><img src=\"http://img.blog.csdn.net/20150830214544464\" alt=\"这里写图片描述\"></p>\n<h3 id=\"6-nsqadmin的web统计\"><a href=\"#6-nsqadmin的web统计\" class=\"headerlink\" title=\"6.nsqadmin的web统计\"></a>6.nsqadmin的web统计</h3><p><img src=\"http://img.blog.csdn.net/20150830214340984\" alt=\"这里写图片描述\"></p>\n<p>nsq自身提供了一个便于查看和操作的web界面，可以实时查看统计信息和执行一些管理任务。</p>\n<h4 id=\"6-1浏览器打开nsqadmin的web页\"><a href=\"#6-1浏览器打开nsqadmin的web页\" class=\"headerlink\" title=\"6.1浏览器打开nsqadmin的web页\"></a>6.1浏览器打开nsqadmin的web页</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">http://192.168.1.111:4171/</span><br></pre></td></tr></table></figure>\n<p>由于默认情况下linux系统，nsqadmin的默认端口4171限制了对外访问，所以我们要打开4171端口的路由访问限制，便于外部系统的浏览器访问。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">iptables -A  INPUT -p tcp --dport 4171 -j ACCEPT</span><br></pre></td></tr></table></figure>\n<ul>\n<li>参数讲解：<br>–A 添加一条规则的意思<br>–p 指定是什么协议，这里是tcp协议<br>–dport 就是目标端口，当数据从外部进入服务器为目标端口<br>–sport 数据从服务器出去，则为数据源端口使用<br>–j 就是指定是 ACCEPT -接收 或者 DROP 不接收</li>\n</ul>\n<h4 id=\"6-2-Topics界面\"><a href=\"#6-2-Topics界面\" class=\"headerlink\" title=\"6.2 Topics界面\"></a>6.2 Topics界面</h4><p><img src=\"http://img.blog.csdn.net/20150830213809966\" alt=\"这里写图片描述\"></p>\n<p>这里详细的列出了所有的发布的topic主题列表，可以点进去查看单个主题的详细统计信息。还可以管理主题，比如清空主题的消息队列，删除主题，暂停主题等等。</p>\n<h4 id=\"6-3-Nodes节点列表\"><a href=\"#6-3-Nodes节点列表\" class=\"headerlink\" title=\"6.3 Nodes节点列表\"></a>6.3 Nodes节点列表</h4><p><img src=\"http://img.blog.csdn.net/20150830213848425\" alt=\"这里写图片描述\"></p>\n<p>这个页面可以查看当前nsqlookupd协调管理的节点列表，以及一些连接信息，比如端口，连接数，主题和主题数量等等。</p>\n<h4 id=\"6-4-Counter消息计数页\"><a href=\"#6-4-Counter消息计数页\" class=\"headerlink\" title=\"6.4 Counter消息计数页\"></a>6.4 Counter消息计数页</h4><p><img src=\"http://img.blog.csdn.net/20150830214013450\" alt=\"这里写图片描述\"></p>\n<p>这个页面最简洁，中间一个硕大的计数牌，展示已经处理过的消息数目。</p>\n<h4 id=\"6-5-Lookup界面\"><a href=\"#6-5-Lookup界面\" class=\"headerlink\" title=\"6.5 Lookup界面\"></a>6.5 Lookup界面</h4><p><img src=\"http://img.blog.csdn.net/20150830214233531\" alt=\"这里写图片描述\"></p>\n<p>这里我们可以创建消息主题和消息通道。</p>\n"}],"PostAsset":[],"PostCategory":[],"PostTag":[],"Tag":[]}}